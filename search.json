[{"path":"https://mps9506.github.io/rATTAINS/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 rATTAINS authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mps9506.github.io/rATTAINS/articles/Example---Tracking-Impaired-Waters.html","id":"notes","dir":"Articles","previous_headings":"","what":"Notes","title":"Example - Tracking Impaired Waters","text":"difficult part utilizing data exploring included reported various states. state provides different amounts data often unique codes information variable name. state tribal specific context probably useful interpreting information included data. Also note documentation specific meanings various output variables information provided EPA.","code":""},{"path":"https://mps9506.github.io/rATTAINS/articles/Introduction.html","id":"about","dir":"Articles","previous_headings":"","what":"About","title":"Introduction","text":"Assessment, Total Maximum Daily Load (TMDL) Tracking Implementation System (ATTAINS) U.S. Environmental Protection Agency (EPA) database used track information provided states water quality assessments conducted Clean Water Act. assessments conducted every two years evaluate nation’s water bodies meet water quality standards. States required take Actions (TMDLs efforts) water bodies meet standards. Public information ATTAINS made available webservices provided JSON files. rATTAINS facilitates accessing data various functions provide raw JSON formatted “tidy” data ATTAINS webservice endpoints. information Clean Water Act assessment reporting available EPA. alternative methods accessing data, see “’s Waterway” webpage interactive data exploration ArcGIS MapService spatial data.","code":""},{"path":[]},{"path":"https://mps9506.github.io/rATTAINS/articles/Introduction.html","id":"summary-services","dir":"Articles","previous_headings":"Functions","what":"Summary Services","title":"Introduction","text":"EPA provides two summary service endpoint provide summaries assessed uses organization identifier hydrologic unit code (HUC). example, return summary assessed uses state Tennessee following function used: resulting tibble includes water type, designated use, summary much assessed uses meet criteria (count, area, distance, etc.) assessed. row, variable called “parameters” composed nested tibble provides information use assessment parameters assessed: HUC12 service operates similarly provides data summarized area, specifically HUC12 units. example: huc12_summary() returns list tibbles different summaries information. Using example, x$huc_summary provides summary HUC area, area percentage catchment assessed good, unknown, impaired. x$assessment_unit_id provides tibble unique identifiers assessment units (distinct sections waterbodies) within queried HUC12. x$ir_summary provides simple summary area catchment classified different Integrated Report Categories. x$use_summary provides summary use attainment HUC12. x$param_summary provides information parameter groups. x$res_plan_summary x$vision_plan_summary provides summary amount watershed covered particular types restoration plans vision plan, TMDLs.","code":"library(rATTAINS) x <- state_summary(organization_id = \"TDECWR\",                    reporting_cycle = \"2016\") x #> # A tibble: 22 × 13 #>    organizatio…¹ organ…² organ…³ repor…⁴ combi…⁵ water…⁶ units…⁷ use_n…⁸ fully…⁹ #>    <chr>         <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 TDECWR        Tennes… State   2016    NA      LAKE/R… Acres   Fish a… 531027… #>  2 TDECWR        Tennes… State   2016    NA      LAKE/R… Acres   Recrea… 376477… #>  3 TDECWR        Tennes… State   2016    NA      LAKE/R… Acres   Indust… 447537… #>  4 TDECWR        Tennes… State   2016    NA      LAKE/R… Acres   Naviga… 1971    #>  5 TDECWR        Tennes… State   2016    NA      LAKE/R… Acres   Domest… 521638… #>  6 TDECWR        Tennes… State   2016    NA      LAKE/R… Acres   Irriga… 563584… #>  7 TDECWR        Tennes… State   2016    NA      LAKE/R… Acres   Livest… 563584… #>  8 TDECWR        Tennes… State   2016    NA      WETLAN… Acres   Fish a… NA      #>  9 TDECWR        Tennes… State   2016    NA      WETLAN… Acres   Livest… NA      #> 10 TDECWR        Tennes… State   2016    NA      WETLAN… Acres   Irriga… NA      #> # … with 12 more rows, 4 more variables: fully_supporting_count <chr>, #> #   not_assessed <chr>, not_assessed_count <chr>, parameters <list>, and #> #   abbreviated variable names ¹​organization_identifier, ²​organization_name, #> #   ³​organization_type_text, ⁴​reporting_cycle, ⁵​combined_cycles, #> #   ⁶​water_type_code, ⁷​units_code, ⁸​use_name, ⁹​fully_supporting x$parameters[[1]] #> # A tibble: 9 × 7 #>   parameter_group                  cause cause…¹ meeti…² meeti…³ insuf…⁴ insuf…⁵ #>   <chr>                            <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl> #> 1 NUTRIENTS                        1289… 5            NA      NA      NA      NA #> 2 METALS (OTHER THAN MERCURY)      2254  4            NA      NA      NA      NA #> 3 FLOW ALTERATION(S)               494   1            NA      NA      NA      NA #> 4 TEMPERATURE                      20459 1            NA      NA      NA      NA #> 5 AMMONIA                          56.1… 1            NA      NA      NA      NA #> 6 PH/ACIDITY/CAUSTIC CONDITIONS    56.1… 1            NA      NA      NA      NA #> 7 SEDIMENT                         3772… 7            NA      NA      NA      NA #> 8 SALINITY/TOTAL DISSOLVED SOLIDS… 56.1… 1            NA      NA      NA      NA #> 9 ORGANIC ENRICHMENT/OXYGEN DEPLE… 5269… 5            NA      NA      NA      NA #> # … with abbreviated variable names ¹​cause_count, ²​meeting_criteria, #> #   ³​meeting_criteria_count, ⁴​insufficent_information, #> #   ⁵​insufficient_information_count x <- huc12_summary(\"020700100204\") x #> $huc_summary #> # A tibble: 1 × 14 #>   huc12  asses…¹ total…² total…³ asses…⁴ asses…⁵ asses…⁶ asses…⁷ asses…⁸ asses…⁹ #>   <chr>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1 02070…      20    46.2    46.2    44.1    95.4    1.77    3.83       0       0 #> # … with 4 more variables: contain_impaired_waters_catchment_area_sq_mi <dbl>, #> #   contain_impaired_waters_catchment_area_percent <dbl>, #> #   contain_restoration_catchment_area_sq_mi <dbl>, #> #   contain_restoration_catchment_area_percent <dbl>, and abbreviated variable #> #   names ¹​assessment_unit_count, ²​total_catchment_area_sq_mi, #> #   ³​total_huc_area_sq_mi, ⁴​assessed_catchment_area_sq_mi, #> #   ⁵​assessed_catchment_area_percent, ⁶​assessed_good_catchment_area_sq_mi, … #>  #> $au_summary #> # A tibble: 20 × 1 #>    assessment_unit_id                       #>    <chr>                                    #>  1 MD-ANATF-02140205                        #>  2 MD-02140205-Northwest_Branch             #>  3 MD-02140205                              #>  4 DCTFD01R_00                              #>  5 MD-ANATF                                 #>  6 DCTFS01R_00                              #>  7 DCTNA01R_00                              #>  8 DCTTX27R_00                              #>  9 DCTFC01R_00                              #> 10 MD-02140205-Mainstem                     #> 11 MD-02140205-Mainstem2                    #> 12 MD-02140205-Northeast_Northwest_Branches #> 13 DCTWB00R_02                              #> 14 DCTWB00R_01                              #> 15 DCANA00E_02                              #> 16 DCTHR01R_00                              #> 17 DCTPB01R_00                              #> 18 DCTDU01R_00                              #> 19 DCANA00E_01                              #> 20 DCAKL00L_00                              #>  #> $ir_summary #> # A tibble: 3 × 4 #>   epa_ir_category_name catchment_size_sq_mi catchment_size_percent assessment_…¹ #>   <chr>                               <dbl>                  <dbl>         <dbl> #> 1 1                                    1.77                   3.83             2 #> 2 4A                                  25.3                   54.8             11 #> 3 5                                   37.9                   81.9              7 #> # … with abbreviated variable name ¹​assessment_unit_count #>  #> $use_summary #> # A tibble: 6 × 5 #>   use_group_name      use_attainment           catchment_size_…¹ catch…² asses…³ #>   <chr>               <chr>                                <dbl>   <dbl>   <dbl> #> 1 ECOLOGICAL_USE      Not Supporting                       19.5    42.1       15 #> 2 FISHCONSUMPTION_USE Fully Supporting                      1.77    3.83       2 #> 3 FISHCONSUMPTION_USE Insufficient Information              1.91    4.14       1 #> 4 FISHCONSUMPTION_USE Not Supporting                       22.8    49.3       16 #> 5 OTHER_USE           Fully Supporting                      1.91    4.13       3 #> 6 RECREATION_USE      Not Supporting                       24.5    53.0       15 #> # … with abbreviated variable names ¹​catchment_size_sq_mi, #> #   ²​catchment_size_percent, ³​assessment_unit_count #>  #> $param_summary #> # A tibble: 17 × 4 #>    parameter_group_name                               catchmen…¹ catch…² asses…³ #>    <chr>                                                   <dbl>   <dbl>   <dbl> #>  1 ALGAL GROWTH                                            22.8    49.3        2 #>  2 CHLORINE                                                10.7    23.2        1 #>  3 HABITAT ALTERATIONS                                     25.3    54.7        3 #>  4 HYDROLOGIC ALTERATION                                   36.5    79.0        6 #>  5 METALS (OTHER THAN MERCURY)                             22.8    49.3        9 #>  6 NUTRIENTS                                               42.4    91.7        4 #>  7 OIL AND GREASE                                          22.8    49.3        3 #>  8 ORGANIC ENRICHMENT/OXYGEN DEPLETION                     42.4    91.7        8 #>  9 PATHOGENS                                               44.1    95.4       15 #> 10 PESTICIDES                                              26.4    57.1       11 #> 11 PH/ACIDITY/CAUSTIC CONDITIONS                            1.72    3.71       1 #> 12 POLYCHLORINATED BIPHENYLS (PCBS)                        26.4    57.1       12 #> 13 SALINITY/TOTAL DISSOLVED SOLIDS/CHLORIDES/SULFATES      19.5    42.1        1 #> 14 SEDIMENT                                                 3.88    8.39       1 #> 15 TOXIC ORGANICS                                          22.8    49.3        8 #> 16 TRASH                                                   42.4    91.7        4 #> 17 TURBIDITY                                               44.1    95.4       15 #> # … with abbreviated variable names ¹​catchment_size_sq_mi, #> #   ²​catchment_size_percent, ³​assessment_unit_count #>  #> $res_plan_summary #> # A tibble: 1 × 4 #>   summary_type_name catchment_size_sq_mi catchment_size_percent assessment_uni…¹ #>   <chr>                            <dbl>                  <dbl>            <dbl> #> 1 TMDL                              26.4                   57.1               15 #> # … with abbreviated variable name ¹​assessment_unit_count #>  #> $vision_plan_summary #> # A tibble: 1 × 4 #>   summary_type_name catchment_size_sq_mi catchment_size_percent assessment_uni…¹ #>   <chr>                            <dbl>                  <dbl>            <dbl> #> 1 TMDL                              26.4                   57.1               15 #> # … with abbreviated variable name ¹​assessment_unit_count"},{"path":"https://mps9506.github.io/rATTAINS/articles/Introduction.html","id":"domains","dir":"Articles","previous_headings":"Functions","what":"Domains","title":"Introduction","text":"function number allowable arguments associated values. order explore values might interested querying, Domain Value service provides information allowable options. mapped domain_values() function. used without arguments get full list possible “domains.” typically searchable parameters used functions rATTAINS. Note domain names returned service one one match argument names used rATTAINS. typically fairly easy figure ones match arguments. example want find possible organization identifiers query : function returns variable state codes possible parameter values context variable. Similarly want look possible Use Names utilized Texas Commission Environmental Quality:","code":"x <- domain_values(domain_name = \"OrgStateCode\") x #> # A tibble: 146 × 4 #>    domain       name  code  context         #>    <chr>        <chr> <chr> <chr>           #>  1 OrgStateCode AK    AK    EPA             #>  2 OrgStateCode FL    FL    21FL303D        #>  3 OrgStateCode PA    PA    EPA             #>  4 OrgStateCode CC    CC    TEST_ORG_C      #>  5 OrgStateCode AZ    AZ    TEST_TRIBE_B    #>  6 OrgStateCode MS    MS    21MSWQ          #>  7 OrgStateCode CT    CT    CT_DEP01        #>  8 OrgStateCode ND    ND    21NDHDWQ        #>  9 OrgStateCode MN    MN    REDLAKE         #> 10 OrgStateCode NM    NM    PUEBLO_POJOAQUE #> # … with 136 more rows x <- domain_values(domain_name = \"UseName\", context = \"TCEQMAIN\") x #> # A tibble: 17 × 4 #>    domain  name                                        code              context #>    <chr>   <chr>                                       <chr>             <chr>   #>  1 UseName Recreation Use                              Recreation Use    TCEQMA… #>  2 UseName Fish Consumption Use                        Fish Consumption… TCEQMA… #>  3 UseName INTERMEDIATE AQUATIC LIFE                   INTERMEDIATE AQU… TCEQMA… #>  4 UseName OVERALL USE SUPPORT                         OVERALL USE SUPP… TCEQMA… #>  5 UseName Aquatic Life Use                            Aquatic Life Use  TCEQMA… #>  6 UseName Oyster Waters Use                           Oyster Waters Use TCEQMA… #>  7 UseName FISH CONSUMPTION                            FISH CONSUMPTION  TCEQMA… #>  8 UseName OYSTER AQUATIC LIFE                         OYSTER AQUATIC L… TCEQMA… #>  9 UseName NON-CONTACT RECREATION                      NON-CONTACT RECR… TCEQMA… #> 10 UseName CONTACT RECREATION USE                      CONTACT RECREATI… TCEQMA… #> 11 UseName DOMESTIC WATER SUPPLY - PUBLIC WATER SUPPLY DOMESTIC WATER S… TCEQMA… #> 12 UseName Public Water Supply Use                     Public Water Sup… TCEQMA… #> 13 UseName General Use                                 General Use       TCEQMA… #> 14 UseName PRIMARY RECREATION/SWIMMING                 PRIMARY RECREATI… TCEQMA… #> 15 UseName CONTACT RECREATION                          CONTACT RECREATI… TCEQMA… #> 16 UseName NONCONTACT RECREATION USE                   NONCONTACT RECRE… TCEQMA… #> 17 UseName Recreational Beaches                        Recreational Bea… TCEQMA…"},{"path":"https://mps9506.github.io/rATTAINS/articles/Introduction.html","id":"other-services","dir":"Articles","previous_headings":"Functions","what":"Other Services","title":"Introduction","text":"assessment_units() : provides information assessment units specified argument parameters. assessments() provides information assessment decisions specified argument parameters. actions() provides information Actions (TMDLs, 4B Actions, similar) finalized specified argument parameters. plans() similiar actions provides information finalized Actions assessment units HUC8. surveys() provides information organization conducted statistical surveys water quality assessment results.","code":""},{"path":"https://mps9506.github.io/rATTAINS/articles/Introduction.html","id":"json-files","dir":"Articles","previous_headings":"Functions","what":"JSON Files","title":"Introduction","text":"default, functions rATTAINS return one “tidy” dataframes. dataframe created attempting flatten nested JSON data returned webservice. require opinionated decisions constitutes flat data, variable data flattened . recognize dataframe output might meet user needs. prefer parse JSON data , use tidy=FALSE argument return unparsed JSON string. number R packages available parse flatten JSON data prepare analysis.","code":""},{"path":"https://mps9506.github.io/rATTAINS/articles/Introduction.html","id":"notes","dir":"Articles","previous_headings":"","what":"Notes","title":"Introduction","text":"U.S. EPA data provider public information. rATTAINS author affiliated EPA. Questions package functionality directed package author. Questions webservice underlying data directed U.S. EPA. Please abuse webservice using package.","code":""},{"path":"https://mps9506.github.io/rATTAINS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Schramm. Author, maintainer, copyright holder.","code":""},{"path":"https://mps9506.github.io/rATTAINS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schramm, Michael (2021).  rATTAINS: Access EPA 'ATTAINS' Data.  R package version 0.1.4. doi:10.5281/zenodo.3635017 https://CRAN.R-project.org/package=rATTAINS","code":"@Manual{,   title = {{rATTAINS}: Access EPA 'ATTAINS' Data},   author = {Michael Schramm},   year = {2021},   url = {https://CRAN.R-project.org/package=rATTAINS},   doi = {10.5281/zenodo.5469911},   note = {R package version 0.1.4}, }"},{"path":"https://mps9506.github.io/rATTAINS/index.html","id":"rattains","dir":"","previous_headings":"","what":"Access EPA ATTAINS Data","title":"Access EPA ATTAINS Data","text":"rATTAINS provides functions downloading tidy data United States (U.S.) Environmental Protection Agency (EPA) ATTAINS webservice. ATTAINS online system used track report Clean Water Act assessments Total Maximum Daily Loads (TMDLs) U.S. surface waters. rATTAINS facilitates access public information webservice made available EPA. rATTAINS CRAN: install development version r-universe:","code":"install.packages('rATTAINS') install.packages('rATTAINS',                  repos = 'https://mps9506.r-universe.dev')"},{"path":"https://mps9506.github.io/rATTAINS/index.html","id":"functions-and-webservices","dir":"","previous_headings":"","what":"Functions and webservices","title":"Access EPA ATTAINS Data","text":"eight user available functions correspond first eight web services detailed EPA. arguments case sensitive. default functions attempt provide flattened “tidy” data single multiple dataframes. using tidy = FALSE argument function , raw JSON read session user parse desired. can useful since webservices provide different results based query tidying process used rATTAINS might make poor assumptions data flattening process. function returns unexpected results, try parsing raw JSON string. state_summary() provides summary information assessed uses organizations integrated reporting cycle. huc_12_summary() provides summary information impairments, actions, documents specified 12-digit HUC (watershed). actions() provides summary information particular finalized actions (TMDLs related). assessments() provides summary data specified assessment decisions waterbody. plans() returns summary plans (TMDLs related) within specified HUC. domain_values() returns allowed values ATTAINS. default (arguments) function returns list allowed domain_names. assessment_units() returns summary information specified assessment units. surveys() returns results state statistical survey results ATTAINS.","code":""},{"path":"https://mps9506.github.io/rATTAINS/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples:","title":"Access EPA ATTAINS Data","text":"Get summary assessed uses Texas Commission Environmental Quality: Get summary assessed uses, parameters plans HUC12: Find statistical surveys completed organization:","code":"library(rATTAINS) state_summary(organization_id = \"TCEQMAIN\", reporting_cycle = \"2020\") %>%   .[1,] %>% str() #> tibble [1 × 13] (S3: tbl_df/tbl/data.frame) #>  $ organization_identifier: chr \"TCEQMAIN\" #>  $ organization_name      : chr \"Texas\" #>  $ organization_type_text : chr \"State\" #>  $ reporting_cycle        : chr \"2020\" #>  $ combined_cycles        : chr NA #>  $ water_type_code        : chr \"ESTUARY\" #>  $ units_code             : chr \"Square Miles\" #>  $ use_name               : chr \"Aquatic Life Use\" #>  $ fully_supporting       : chr \"1861.320000\" #>  $ fully_supporting_count : chr \"57\" #>  $ not_assessed           : chr \"46.190000\" #>  $ not_assessed_count     : chr \"6\" #>  $ parameters             :List of 1 #>   ..$ : tibble [7 × 7] (S3: tbl_df/tbl/data.frame) #>   .. ..$ parameter_group               : chr [1:7] \"TOXIC INORGANICS\" \"ORGANIC ENRICHMENT/OXYGEN DEPLETION\" \"PESTICIDES\" \"TOXIC ORGANICS\" ... #>   .. ..$ cause                         : chr [1:7] NA \"616.850000\" NA NA ... #>   .. ..$ cause_count                   : chr [1:7] NA \"5\" NA NA ... #>   .. ..$ meeting_criteria              : num [1:7] NA 1901.8 NA NA 96.9 ... #>   .. ..$ meeting_criteria_count        : num [1:7] NA 62 NA NA 8 NA 8 #>   .. ..$ insufficent_information       : num [1:7] 2.76 NA 3.2 1.07 344.3 ... #>   .. ..$ insufficient_information_count: num [1:7] 1 NA 3 2 6 7 5 huc12_summary(huc = \"020700100204\") #> $huc_summary #> # A tibble: 1 × 14 #>   huc12  asses…¹ total…² total…³ asses…⁴ asses…⁵ asses…⁶ asses…⁷ asses…⁸ asses…⁹ #>   <chr>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1 02070…      17    46.2    46.2    44.1    95.4       0       0       0       0 #> # … with 4 more variables: contain_impaired_waters_catchment_area_sq_mi <dbl>, #> #   contain_impaired_waters_catchment_area_percent <dbl>, #> #   contain_restoration_catchment_area_sq_mi <dbl>, #> #   contain_restoration_catchment_area_percent <dbl>, and abbreviated variable #> #   names ¹​assessment_unit_count, ²​total_catchment_area_sq_mi, #> #   ³​total_huc_area_sq_mi, ⁴​assessed_catchment_area_sq_mi, #> #   ⁵​assessed_catchment_area_percent, ⁶​assessed_good_catchment_area_sq_mi, … #>  #> $au_summary #> # A tibble: 17 × 1 #>    assessment_unit_id           #>    <chr>                        #>  1 MD-02140205-Northwest_Branch #>  2 MD-02140205                  #>  3 DCTFD01R_00                  #>  4 MD-ANATF                     #>  5 DCTFS01R_00                  #>  6 DCTNA01R_00                  #>  7 DCTTX27R_00                  #>  8 DCTFC01R_00                  #>  9 MD-02140205-Mainstem         #> 10 DCTWB00R_02                  #> 11 DCTWB00R_01                  #> 12 DCANA00E_02                  #> 13 DCTHR01R_00                  #> 14 DCTPB01R_00                  #> 15 DCTDU01R_00                  #> 16 DCANA00E_01                  #> 17 DCAKL00L_00                  #>  #> $ir_summary #> # A tibble: 2 × 4 #>   epa_ir_category_name catchment_size_sq_mi catchment_size_percent assessment_…¹ #>   <chr>                               <dbl>                  <dbl>         <dbl> #> 1 4A                                   25.2                   54.5            10 #> 2 5                                    37.9                   81.9             7 #> # … with abbreviated variable name ¹​assessment_unit_count #>  #> $use_summary #> # A tibble: 5 × 5 #>   use_group_name      use_attainment           catchment_size_…¹ catch…² asses…³ #>   <chr>               <chr>                                <dbl>   <dbl>   <dbl> #> 1 ECOLOGICAL_USE      Not Supporting                       22.8    49.3       13 #> 2 FISHCONSUMPTION_USE Insufficient Information             24.5    53.0        1 #> 3 FISHCONSUMPTION_USE Not Supporting                       24.5    53.0       12 #> 4 OTHER_USE           Fully Supporting                      1.92    4.15       3 #> 5 RECREATION_USE      Not Supporting                       24.5    53.0       13 #> # … with abbreviated variable names ¹​catchment_size_sq_mi, #> #   ²​catchment_size_percent, ³​assessment_unit_count #>  #> $param_summary #> # A tibble: 16 × 4 #>    parameter_group_name                catchment_size_sq_mi catchment_…¹ asses…² #>    <chr>                                              <dbl>        <dbl>   <dbl> #>  1 ALGAL GROWTH                                       22.8         49.3        2 #>  2 CHLORINE                                           10.7         23.2        1 #>  3 HABITAT ALTERATIONS                                 5.80        12.5        2 #>  4 HYDROLOGIC ALTERATION                              17.0         36.8        5 #>  5 METALS (OTHER THAN MERCURY)                        22.8         49.3        9 #>  6 NUTRIENTS                                          22.8         49.3        2 #>  7 OIL AND GREASE                                     22.8         49.3        3 #>  8 ORGANIC ENRICHMENT/OXYGEN DEPLETION                22.8         49.3        6 #>  9 PATHOGENS                                          24.5         53.0       13 #> 10 PESTICIDES                                         24.5         53.0        9 #> 11 PH/ACIDITY/CAUSTIC CONDITIONS                       1.72         3.71       1 #> 12 POLYCHLORINATED BIPHENYLS (PCBS)                   24.5         53.0       10 #> 13 SEDIMENT                                            3.88         8.39       1 #> 14 TOXIC ORGANICS                                     22.8         49.3        8 #> 15 TRASH                                              22.8         49.3        2 #> 16 TURBIDITY                                          24.5         53.0       13 #> # … with abbreviated variable names ¹​catchment_size_percent, #> #   ²​assessment_unit_count #>  #> $res_plan_summary #> # A tibble: 1 × 4 #>   summary_type_name catchment_size_sq_mi catchment_size_percent assessment_uni…¹ #>   <chr>                            <dbl>                  <dbl>            <dbl> #> 1 TMDL                              24.5                   53.0               13 #> # … with abbreviated variable name ¹​assessment_unit_count #>  #> $vision_plan_summary #> # A tibble: 1 × 4 #>   summary_type_name catchment_size_sq_mi catchment_size_percent assessment_uni…¹ #>   <chr>                            <dbl>                  <dbl>            <dbl> #> 1 TMDL                              24.5                   53.0               13 #> # … with abbreviated variable name ¹​assessment_unit_count df <- surveys(organization_id=\"SDDENR\") str(df) #> List of 2 #>  $ documents: tibble [0 × 12] (S3: tbl_df/tbl/data.frame) #>   ..$ organization_identifier: chr(0)  #>   ..$ organization_name      : chr(0)  #>   ..$ organization_type_text : chr(0)  #>   ..$ survey_status_code     : chr(0)  #>   ..$ year                   : num(0)  #>   ..$ survey_comment_text    : chr(0)  #>   ..$ agency_code            : chr(0)  #>   ..$ document_file_type     : chr(0)  #>   ..$ document_file_name     : chr(0)  #>   ..$ document_description   : chr(0)  #>   ..$ document_comments      : chr(0)  #>   ..$ document_url           : chr(0)  #>  $ surveys  : tibble [104 × 19] (S3: tbl_df/tbl/data.frame) #>   ..$ organization_identifier        : chr [1:104] \"SDDENR\" \"SDDENR\" \"SDDENR\" \"SDDENR\" ... #>   ..$ organization_name              : chr [1:104] \"South Dakota\" \"South Dakota\" \"South Dakota\" \"South Dakota\" ... #>   ..$ organization_type_text         : chr [1:104] \"State\" \"State\" \"State\" \"State\" ... #>   ..$ survey_status_code             : chr [1:104] \"Final\" \"Final\" \"Final\" \"Final\" ... #>   ..$ year                           : num [1:104] 2018 2018 2018 2018 2018 ... #>   ..$ survey_comment_text            : chr [1:104] NA NA NA NA ... #>   ..$ water_type_group_code          : chr [1:104] \"LAKE/RESERVOIR/POND\" \"LAKE/RESERVOIR/POND\" \"LAKE/RESERVOIR/POND\" \"LAKE/RESERVOIR/POND\" ... #>   ..$ sub_population_code            : chr [1:104] \"Statewide\" \"Statewide\" \"Statewide\" \"Statewide\" ... #>   ..$ unit_code                      : chr [1:104] \"Acres\" \"Acres\" \"Acres\" \"Acres\" ... #>   ..$ size                           : num [1:104] 213265 213265 213265 213265 213265 ... #>   ..$ site_number                    : chr [1:104] \"70\" \"70\" \"70\" \"70\" ... #>   ..$ survey_water_group_comment_text: chr [1:104] NA NA NA NA ... #>   ..$ stressor                       : chr [1:104] \"TEMPERATURE\" NA \"DISSOLVED OXYGEN\" NA ... #>   ..$ survey_use_code                : chr [1:104] \"AQUATIC LIFE - TEMPERATURE\" \"AQUATIC LIFE - PH\" \"AQUATIC LIFE - DISSOLVED OXYGEN\" \"IMMERSION RECREATION WATERS\" ... #>   ..$ survey_category_code           : chr [1:104] \"Fully Supporting\" \"Fully Supporting\" \"Fully Supporting\" \"Not Supporting\" ... #>   ..$ statistic                      : chr [1:104] \"Condition Estimate\" \"Condition Estimate\" \"Condition Estimate\" \"Condition Estimate\" ... #>   ..$ metric_value                   : num [1:104] 85.9 62.9 95.1 7.24 98.8 37.1 4.9 95.1 37.1 4.9 ... #>   ..$ confidence_level               : num [1:104] 90 90 90 90 90 90 90 90 90 90 ... #>   ..$ comment_text                   : chr [1:104] NA NA NA NA ..."},{"path":"https://mps9506.github.io/rATTAINS/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Access EPA ATTAINS Data","text":"use package publication, please cite :","code":"citation(\"rATTAINS\") #>  #> To cite rATTAINS in publications use: #>  #>   Schramm, Michael (2021).  rATTAINS: Access EPA 'ATTAINS' Data.  R #>   package version 0.1.3. doi:10.5281/zenodo.3635017 #>   https://CRAN.R-project.org/package=rATTAINS #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {{rATTAINS}: Access EPA 'ATTAINS' Data}, #>     author = {Michael Schramm}, #>     year = {2021}, #>     url = {https://CRAN.R-project.org/package=rATTAINS}, #>     doi = {10.5281/zenodo.5469911}, #>     note = {R package version 0.1.3}, #>   }"},{"path":"https://mps9506.github.io/rATTAINS/reference/actions.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Actions Data — actions","title":"Download Actions Data — actions","text":"Provides data actions (TMDLs, 4B Actions, Alternative Actions, Protection Approach Actions) finalized.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/actions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Actions Data — actions","text":"","code":"actions(   action_id = NULL,   assessment_unit_id = NULL,   state_code = NULL,   organization_id = NULL,   summarize = FALSE,   parameter_name = NULL,   pollutant_name = NULL,   action_type_code = NULL,   agency_code = NULL,   pollutant_source_code = NULL,   action_status_code = NULL,   completion_date_later_than = NULL,   completion_date_earlier_than = NULL,   tmdl_date_later_than = NULL,   tmdl_date_earlier_then = NULL,   last_change_later_than_date = NULL,   last_change_earlier_than_date = NULL,   return_count_only = FALSE,   tidy = TRUE,   ... )"},{"path":"https://mps9506.github.io/rATTAINS/reference/actions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Actions Data — actions","text":"action_id (character) Specifies action retrieve. multiple values allowed. optional assessment_unit_id (character) Filters returned actions associated specified assessment unit identifier, plus statewide actions. multiple values allowed. optional state_code (character) Filters returned actions \"belonging\" specified state. optional organization_id (character) Filter returned actions \"belonging\" specified organizations. multiple values allowed. optional summarize (logical) TRUE provides count assessment units action summary pollutants parameters covered action. parameter_name (character) Filters returned actions associated specified parameter. multiple values allowed. optional pollutant_name (character) Filters returned actions associated specified pollutant. multiple values allowed. optional action_type_code (character) Filters returned actions associated specified action type code. multiple values allowed. optional agency_code (character) Filters returned actions specified agency code. multiple values allowed. optional pollutant_source_code (character) Filters returned actions matching specified pollutant source code. multiple values allowed. optional action_status_code (character) Filters returned actions matching specified action status code. multiple values allowed. optional completion_date_later_than (character) Filters returned actions completion date later value specified. Must character formatted \"YYYY-MM-DD\". optional completion_date_earlier_than (character) Filters returned actions completion date earlier value specified. Must character formatted \"YYYY-MM-DD\". optional tmdl_date_later_than (character) Filters returned actions TMDL date later value specified. Must character formatted \"YYYY-MM-DD\". optional tmdl_date_earlier_then (character) Filters returned actions TMDL date earlier value specified. Must character formatted \"YYYY-MM-DD\". optional last_change_later_than_date (character) Filters returned actions last change date later value specified. Can used last_change_earlier_than_date return actions changed within date range. Must character formatted \"YYYY-MM-DD\". optional last_change_earlier_than_date (character) Filters returned actions last change date earlier value specified. Can used last_change_later_than_date return actions changed within date range. Must character formatted \"YYYY-MM-DD\". optional return_count_only (logical) TRUE returns count actions match query. tidy (logical) TRUE (default) function returns tidied tibble. FALSE function returns raw JSON string. ... list curl options passed crul::HttpClient()","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/actions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Actions Data — actions","text":"count = TRUE returns tibble summarizes count actions returned query. count = FALSE returns list tibbles including documents actions identified query. tidy = FALSE raw JSON string returned, else JSON data parsed returned tibbles.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/actions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Actions Data — actions","text":"One following arguments must included: action_id, assessment_unit_id, state_code organization_id. Multiple values allowed indicated arguments included comma separated values string (eg. organization_id=\"TCEQMAIN,DCOEE\").","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/actions.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download Actions Data — actions","text":"See domain_values search values can queried.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/actions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Actions Data — actions","text":"","code":"if (FALSE) {  ## Look up an individual action actions(action_id = \"R8-ND-2018-03\") ## Get the JSON instead actions(action_id = \"R8-ND-2018-03\", tidy = FALSE) }"},{"path":"https://mps9506.github.io/rATTAINS/reference/assessment_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Assessment Unit Summary — assessment_units","title":"Download Assessment Unit Summary — assessment_units","text":"Provides basic information requested assessment units.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/assessment_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Assessment Unit Summary — assessment_units","text":"","code":"assessment_units(   assessment_unit_identifer = NULL,   state_code = NULL,   organization_id = NULL,   epa_region = NULL,   huc = NULL,   county = NULL,   assessment_unit_name = NULL,   last_change_later_than_date = NULL,   last_change_earlier_than_date = NULL,   status_indicator = NULL,   return_count_only = NULL,   tidy = TRUE,   ... )"},{"path":"https://mps9506.github.io/rATTAINS/reference/assessment_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Assessment Unit Summary — assessment_units","text":"assessment_unit_identifer (character) Filters returned assessment units one specific assessment units. Multiple values can provided. optional state_code (character) Filters returned assessment units state code matches one provided list states. Multiple values can provided. optional organization_id (character) Filters returned assessment units mathcing organization ID. Multiple values can provided. optional epa_region (character) Filters returned assessment units matching EPA regions. Multiple values can provided. optional huc (character) Filters returned assessment units location type HUC location value matches provided HUC. Multiple values can provided. optional county (character) Filters returned assessment units location type county matches provided county. Multiple values can provided. optional assessment_unit_name (character) Filters returned assessment units matching provided value. last_change_later_than_date (character) Filters returned assessment units changed provided date. Must character format: \"yyyy-mm-dd\". optional last_change_earlier_than_date (character) Filters returned assessment units changed provided date. Must character format: \"yyyy-mm-dd\". optional status_indicator (character) Filter returned assessment units specified status. \"\" active, \"R\" retired. optional return_count_only (character) \"Y\" yes, \"N\" . Defaults \"N\". optional tidy (logical) TRUE (default) function returns tidied tibble. FALSE function returns raw JSON string. ... list curl options passed crul::HttpClient()","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/assessment_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Assessment Unit Summary — assessment_units","text":"tidy = TRUE tibble many variables, nested, returned. tidy=FALSE raw JSON string returned.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/assessment_units.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Assessment Unit Summary — assessment_units","text":"One following arguments must included: assessment_unit_identfier, state_code organization_id. Multiple values allowed indicated arguments included comma separated values string (eg. organization_id=\"TCEQMAIN,DCOEE\").","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/assessment_units.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download Assessment Unit Summary — assessment_units","text":"See domain_values search values can queried.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/assessment_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Assessment Unit Summary — assessment_units","text":"","code":"if (FALSE) {  ## Retrieve data about a single assessment unit assessment_units(assessment_unit_identifer = \"AL03150201-0107-200\")  ## Retrieve data as a JSON instead assessment_units(assessment_unit_identifer = \"AL03150201-0107-200\", tidy = FALSE) }"},{"path":"https://mps9506.github.io/rATTAINS/reference/assessments.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Assessment Decisions — assessments","title":"Download Assessment Decisions — assessments","text":"Download Assessment Decisions","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/assessments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Assessment Decisions — assessments","text":"","code":"assessments(   assessment_unit_id = NULL,   state_code = NULL,   organization_id = NULL,   reporting_cycle = NULL,   use = NULL,   use_support = NULL,   parameter = NULL,   parameter_status_name = NULL,   probable_source = NULL,   agency_code = NULL,   ir_category = NULL,   state_ir_category_code = NULL,   multicategory_search = NULL,   last_change_later_than_date = NULL,   last_change_earlier_than_date = NULL,   return_count_only = FALSE,   exclude_assessments = FALSE,   tidy = TRUE,   ... )"},{"path":"https://mps9506.github.io/rATTAINS/reference/assessments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Assessment Decisions — assessments","text":"assessment_unit_id (character) Specify specific assessment unit assessment data return. Multiple values can provided. optional state_code (character) Filters returned assessments specified state. optional organization_id (character) Filters returned assessments belonging specified organization. optional reporting_cycle (character) Filters returned assessments specified reporting cycle. reporting cycle refers four-digit year reporting cycle ended. Defaults current cycle. optional use (character) Filters returned assessments specified uses. Multiple values can provided. optional use_support (character) Filters returned assessments fully supporting specified uses threatened. Multiple values can provided. Allowable values include \"X\"= Assessed, \"\"= Insufficient Information, \"F\"= Fully Supporting, \"N\"= Supporting, \"T\"= Threatened. optional parameter (character) Filters returned assessments one specified parameters. Multiple values can provided. optional parameter_status_name (character) Filters returned assessments one associated parameters meeting provided value. Valid values \"Meeting Criteria\", \"Cause\", \"Observed Effect\". Multiple valuse can provided. optional probable_source (character) Filters returned assessments specified probable source. Multiple values can provided. optional agency_code (character) Filters returned assessments type agency responsible assessment. Allowed values \"E\"=EPA, \"S\"=State, \"T\"=Tribal. optional ir_category (character) Filters returned assessments specified IR category. Multiple values can provided. optional state_ir_category_code (character) Filters returned assessments include provided codes. multicategory_search (character) Specifies whether search multiple levels.  parameter set “Y” query applies EPA IR Category Assessment, UseAttainment, Parameter levels; parameter set “N” looks Assessment level. last_change_later_than_date (character) Filters returned assessments last changed provided date. Must character format: \"yyyy-mm-dd\". optional last_change_earlier_than_date (character) Filters returned assessments last changed provided date. Must character format: \"yyyy-mm-dd\". optional return_count_only (logical) TRUE returns count actions match query. defaults FALSE exclude_assessments (logical) TRUE returns documents associated Assessment cycle instead assessment data. Defaults FALSE. tidy (logical) TRUE (default) function returns tidied tibble. FALSE function returns raw JSON string. ... list curl options passed crul::HttpClient()","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/assessments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Assessment Decisions — assessments","text":"count = TRUE returns tibble summarizes count actions returned query. count = FALSE returns list tibbles including documents, use assessment data, parameters assessment data identified query. tidy = FALSE raw JSON string returned, else JSON data parsed returned tibbles.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/assessments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Assessment Decisions — assessments","text":"One following arguments must included: action_id, assessment_unit_id, state_code organization_id. Multiple values allowed indicated arguments included comma separated values string (eg. organization_id=\"TCEQMAIN,DCOEE\").","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/assessments.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download Assessment Decisions — assessments","text":"See domain_values search values can queried.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/assessments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Assessment Decisions — assessments","text":"","code":"if (FALSE) {  ## Return all assessment decisions with specified parameters assessments(organization_id = \"SDDENR\", probable_source = \"GRAZING IN RIPARIAN OR SHORELINE ZONES\")  ## Returns the raw JSONs instead: assessments(organization_id = \"SDDENR\", probable_source = \"GRAZING IN RIPARIAN OR SHORELINE ZONES\", tidy = FALSE) }"},{"path":"https://mps9506.github.io/rATTAINS/reference/domain_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Domain Values — domain_values","title":"Download Domain Values — domain_values","text":"Provides information allowed parameter values ATTAINS.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/domain_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Domain Values — domain_values","text":"","code":"domain_values(domain_name = NULL, context = NULL, tidy = TRUE, ...)"},{"path":"https://mps9506.github.io/rATTAINS/reference/domain_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Domain Values — domain_values","text":"domain_name (character) Specified domain name obtain valid parameter values . Defaults NULL tibble domain names. return allowable parameter values given domain, domain specified . optional context (character) specified, service return domain_name values  alongside context. optional. tidy (logical) TRUE (default) function returns tidied tibble. FALSE function returns raw JSON string. ... list curl options passed crul::HttpClient()","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/domain_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Domain Values — domain_values","text":"tidy = FALSE raw JSON string returned, else JSON data parsed returned tibble.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/domain_values.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download Domain Values — domain_values","text":"Data downloaded EPA webservice automatically cached reduce uneccessary calls server.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/domain_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Domain Values — domain_values","text":"","code":"if (FALSE) {  ## return a tibble with all domain names domain_values()  ## return allowable parameter values for a given domain name and context domain_values(domain_name=\"UseName\",context=\"TCEQMAIN\")  ## return the query as a JSON string instead domain_values(domain_name=\"UseName\",context=\"TCEQMAIN\", tidy= FALSE) }"},{"path":"https://mps9506.github.io/rATTAINS/reference/huc12_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Download HUC12 Summary — huc12_summary","title":"Download HUC12 Summary — huc12_summary","text":"Provides summary data 12-digit Hydrologic Unit Code (HUC12), based Assessment Units HUC12. Watershed boundaries may cross state boundaries, service may return assessment units multiple organizations. Returns assessment units HUC12, size percentages assessment units considered Good, Unknown, Impaired.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/huc12_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download HUC12 Summary — huc12_summary","text":"","code":"huc12_summary(huc, tidy = TRUE, ...)"},{"path":"https://mps9506.github.io/rATTAINS/reference/huc12_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download HUC12 Summary — huc12_summary","text":"huc (character) Specifies 12-digit HUC summarized. required tidy (logical) TRUE (default) function returns tidied tibble. FALSE function returns raw JSON string. ... list curl options passed crul::HttpClient()","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/huc12_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download HUC12 Summary — huc12_summary","text":"tidy = FALSE raw JSON string returned, else JSON data parsed returned list tibbles include list seven tibbles.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/huc12_summary.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download HUC12 Summary — huc12_summary","text":"See domain_values search values can queried.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/huc12_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download HUC12 Summary — huc12_summary","text":"","code":"if (FALSE) { ## Return a list of tibbles with summary data about a single huc12 x <- huc12_summary(huc = \"020700100204\")  ## Return as a JSON string x <- huc12_summary(huc = \"020700100204\", tidy = TRUE) }"},{"path":"https://mps9506.github.io/rATTAINS/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://mps9506.github.io/rATTAINS/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/plans.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Plans and Actions by HUC — plans","title":"Download Plans and Actions by HUC — plans","text":"Returns information plans actions (TMDLs, 4B Actions, Alternative Actions, Protective Approach Actions) finalized. similar actions returns data HUC code assessment units covered plan action within specified HUC.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/plans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Plans and Actions by HUC — plans","text":"","code":"plans(huc, organization_id = NULL, summarize = FALSE, tidy = TRUE, ...)"},{"path":"https://mps9506.github.io/rATTAINS/reference/plans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Plans and Actions by HUC — plans","text":"huc (character) Filters returned actions 8-digit higher HUC. required organization_id (character). Filters returned actions belonging specified organization. Multiple values can used. optional summarize (logical) TRUE count assessment units returned rather assessment unit itdentifers action. Defaults FALSE. tidy (logical) TRUE (default) function returns list tibbles. FALSE function returns raw JSON string. ... list curl options passed crul::HttpClient()","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/plans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Plans and Actions by HUC — plans","text":"count = TRUE returns tibble summarizes count actions returned query. count = FALSE returns list tibbles including documents, use assessment data, parameters assessment data identified query. tidy = FALSE raw JSON string returned, else JSON data parsed returned list tibbles.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/plans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Plans and Actions by HUC — plans","text":"huc required argument. Multiple values allowed indicated arguments included comma separated values string (eg. organization_id=\"TCEQMAIN,DCOEE\").","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/plans.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download Plans and Actions by HUC — plans","text":"See domain_values search values can queried.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/plans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Plans and Actions by HUC — plans","text":"","code":"if (FALSE) {  ## Query plans by huc plans(huc =\"020700100103\")  ## return a JSON string instead of list of tibbles plans(huc = \"020700100103\", tidy = FALSE) }"},{"path":"https://mps9506.github.io/rATTAINS/reference/state_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Download State Summaries — state_summary","title":"Download State Summaries — state_summary","text":"Provides summary information assessed uses organization (State, Territory Tribe) Integrated Reporting Cycle. Organization ID state, territory tribe required. Reporting Cycle provided, service return recent cycle. reporting Cycle provided, service return summary requested cycle.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/state_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download State Summaries — state_summary","text":"","code":"state_summary(organization_id = NULL, reporting_cycle = NULL, tidy = TRUE, ...)"},{"path":"https://mps9506.github.io/rATTAINS/reference/state_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download State Summaries — state_summary","text":"organization_id (character) Restricts results specified organization. required reporting_cycle (character) Filters returned results specified 4 digit reporting cycle year. Typically even numbered years. return reporting data years prior including reporting cycle reporting cycle. optional tidy (logical) TRUE (default) function returns tidied tibble. FALSE function returns raw JSON string. ... list curl options passed crul::HttpClient()","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/state_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download State Summaries — state_summary","text":"tidy = FALSE raw JSON string returned, else JSON data parsed returned list tibbles.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/state_summary.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download State Summaries — state_summary","text":"See domain_values search values can queried.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/state_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download State Summaries — state_summary","text":"","code":"if (FALSE) { ## Get a list of tibbles summarizing assessed uses state_summary(organization_id = \"TDECWR\", reporting_cycle = \"2016\")  ## Returns the query as a JSON string instead state_summary(organization_id = \"TDECWR\", reporting_cycle = \"2016\", tidy = FALSE) }"},{"path":"https://mps9506.github.io/rATTAINS/reference/surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Download State Survey Results — surveys","title":"Download State Survey Results — surveys","text":"Downloads data state statistical (probability) survey results.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/surveys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download State Survey Results — surveys","text":"","code":"surveys(organization_id = NULL, survey_year = NULL, tidy = TRUE, ...)"},{"path":"https://mps9506.github.io/rATTAINS/reference/surveys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download State Survey Results — surveys","text":"organization_id (character) Filters list “belonging ” one specified organizations. Multiple values may specified. required survey_year (character) Filters list year survey performed. optional. tidy (logical) TRUE (default) function returns tidied tibble. FALSE function returns raw JSON string. ... list curl options passed crul::HttpClient()","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/surveys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download State Survey Results — surveys","text":"tidy = FALSE raw JSON string returned, else JSON data parsed returned list tibbles.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/surveys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download State Survey Results — surveys","text":"Arguments allow multiple values entered comma separated string spaces (organization_id = \"DOEE,21AWIC\").","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/surveys.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download State Survey Results — surveys","text":"See domain_values search values can queried.","code":""},{"path":"https://mps9506.github.io/rATTAINS/reference/surveys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download State Survey Results — surveys","text":"","code":"if (FALSE) {  ## return surveys by organization surveys(organization_id=\"SDDENR\")  ## return as a JSON string instead of a list of tibbles surveys(organization_id=\"SDDENR\", tidy = FALSE) }"},{"path":"https://mps9506.github.io/rATTAINS/news/index.html","id":"rattains-014","dir":"Changelog","previous_headings":"","what":"rATTAINS 0.1.4","title":"rATTAINS 0.1.4","text":"fixes compatibility tidyselect prep purrr 1.0.0 (PR #26 @hadley). breaking change - removed caching functionality dependency hoardr (archived).","code":""},{"path":"https://mps9506.github.io/rATTAINS/news/index.html","id":"rattains-013","dir":"Changelog","previous_headings":"","what":"rATTAINS 0.1.3","title":"rATTAINS 0.1.3","text":"CRAN release: 2021-11-03 add citation file add webmocker suggests, unit test now test status codes > 200 RETRY used instead GET address system timeouts Connectivity check useful messages included internet ","code":""},{"path":"https://mps9506.github.io/rATTAINS/news/index.html","id":"rattains-012","dir":"Changelog","previous_headings":"","what":"rATTAINS 0.1.2","title":"rATTAINS 0.1.2","text":"CRAN release: 2021-09-13 vignette longer creates empty file tree building (issue #14)","code":""},{"path":"https://mps9506.github.io/rATTAINS/news/index.html","id":"rattains-011","dir":"Changelog","previous_headings":"","what":"rATTAINS 0.1.1","title":"rATTAINS 0.1.1","text":"CRAN release: 2021-09-02 add package option cache files, defaults FALSE. minor fixes address CRAN checks various platforms.","code":""},{"path":"https://mps9506.github.io/rATTAINS/news/index.html","id":"rattains-010","dir":"Changelog","previous_headings":"","what":"rATTAINS 0.1.0","title":"rATTAINS 0.1.0","text":"CRAN release: 2021-08-20 Released CRAN","code":""},{"path":"https://mps9506.github.io/rATTAINS/news/index.html","id":"rattains-0009000","dir":"Changelog","previous_headings":"","what":"rATTAINS 0.0.0.9000","title":"rATTAINS 0.0.0.9000","text":"Added primary functions access webservice. Added NEWS.md file track changes package. Created vignettes. Created pkgdown site.","code":""}]
